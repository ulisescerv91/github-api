import React, { useEffect, useState } from 'react';
// import axios from 'axios'
// import _ from 'lodash'
import './SearchBugs.scss'

const SearchBugs = () => {
  const [searchText, setSearchtext] = useState('');
  const [dataAPI, setDataAPI] = useState({})
  const fakeData = {
    "total_count": 1459,
    "incomplete_results": false,
    "items": [
      {
        "url": "https://api.github.com/repos/facebook/react/issues/22087",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/22087/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/22087/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/22087/events",
        "html_url": "https://github.com/facebook/react/issues/22087",
        "id": 970526125,
        "node_id": "MDU6SXNzdWU5NzA1MjYxMjU=",
        "number": 22087,
        "title": "Bug: ",
        "user": {
          "login": "NikkiMather",
          "id": 37641439,
          "node_id": "MDQ6VXNlcjM3NjQxNDM5",
          "avatar_url": "https://avatars.githubusercontent.com/u/37641439?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/NikkiMather",
          "html_url": "https://github.com/NikkiMather",
          "followers_url": "https://api.github.com/users/NikkiMather/followers",
          "following_url": "https://api.github.com/users/NikkiMather/following{/other_user}",
          "gists_url": "https://api.github.com/users/NikkiMather/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/NikkiMather/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/NikkiMather/subscriptions",
          "organizations_url": "https://api.github.com/users/NikkiMather/orgs",
          "repos_url": "https://api.github.com/users/NikkiMather/repos",
          "events_url": "https://api.github.com/users/NikkiMather/events{/privacy}",
          "received_events_url": "https://api.github.com/users/NikkiMather/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-08-13T15:50:05Z",
        "updated_at": "2021-08-13T15:52:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nFirst I just want to preface this by stating that I'm unsure if this is a Google Places API issue or a React issue. The issue I'm having is that React renders `autoComplete=\"ignore\"` as `autoComplete=\"off\"` no matter what I do. I have highlighted the code below that triggers this issue with double asterisks.\r\n\r\n    useEffect(() => {\r\n        if (!googleApiReady || typeof onPlaceClicked !== \"function\") {\r\n            return;\r\n        }\r\n\r\n        **const placesAutoComplete = new window.google.maps.places.Autocomplete(\r\n            ref.current,\r\n            {  componentRestrictions: { country: \"us\" } }\r\n        );**\r\n\r\n        placesAutoComplete.setFields([\"address_components\", \"formatted_address\"]);\r\n        placesAutoComplete.addListener(\"place_changed\", () => {\r\n                const place = placesAutoComplete.getPlace();\r\n                const results = {}\r\n                const map = {\r\n                    street_number: \"short_name\",\r\n                    route: \"long_name\",\r\n                    locality: \"long_name\",\r\n                    administrative_area_level_1: \"short_name\",\r\n                    country: \"long_name\",\r\n                    postal_code: \"short_name\",\r\n                };\r\n\r\n                for (const component of place.address_components) {\r\n                    const addressType = component.types[0];\r\n                    if (map[addressType]) {\r\n                        results[addressType] = component[map[addressType]]\r\n                    }\r\n                }\r\n\r\n                onPlaceClicked(results)\r\n            }\r\n        );\r\n    }, [googleApiReady])\r\n\r\nReact version: 17.0.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Add `autoComplete=\"ignore\"` to an input and initialize the Google Places API\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nReact renders `autocomplete=\"off\"` to the page rather than `autocomplete=\"ignore\"`.\r\n\r\n## The expected behavior\r\n\r\nReact renders `autocomplete=\"off\"` to the page.",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21554",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21554/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21554/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21554/events",
        "html_url": "https://github.com/facebook/react/issues/21554",
        "id": 899616660,
        "node_id": "MDU6SXNzdWU4OTk2MTY2NjA=",
        "number": 21554,
        "title": "Bug: Events bug",
        "user": {
          "login": "actualchao",
          "id": 49225266,
          "node_id": "MDQ6VXNlcjQ5MjI1MjY2",
          "avatar_url": "https://avatars.githubusercontent.com/u/49225266?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/actualchao",
          "html_url": "https://github.com/actualchao",
          "followers_url": "https://api.github.com/users/actualchao/followers",
          "following_url": "https://api.github.com/users/actualchao/following{/other_user}",
          "gists_url": "https://api.github.com/users/actualchao/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/actualchao/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/actualchao/subscriptions",
          "organizations_url": "https://api.github.com/users/actualchao/orgs",
          "repos_url": "https://api.github.com/users/actualchao/repos",
          "events_url": "https://api.github.com/users/actualchao/events{/privacy}",
          "received_events_url": "https://api.github.com/users/actualchao/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-05-24T12:30:29Z",
        "updated_at": "2021-06-10T13:33:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\nWhy the disabled button cannot trigger the mouse leave, mouseEnter, and mouseMove events of the parent container div\r\nReact version:\r\n17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\nThe reproduction steps are very simple, the code is in codesanbox\r\n\r\n\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\nhttps://codesandbox.io/s/focused-firefly-cd9nf?file=/src/App.tsx\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\ndisabled button cannot trigger the mouse leave, mouseEnter, and mouseMove events of the parent container div\r\n\r\n## The expected behavior\r\nNormally trigger events like vue and native code",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/22085",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/22085/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/22085/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/22085/events",
        "html_url": "https://github.com/facebook/react/issues/22085",
        "id": 970322577,
        "node_id": "MDU6SXNzdWU5NzAzMjI1Nzc=",
        "number": 22085,
        "title": "Bug: Should have a queue. This is likely a bug in React. Please file an issue.",
        "user": {
          "login": "Braweria",
          "id": 62669899,
          "node_id": "MDQ6VXNlcjYyNjY5ODk5",
          "avatar_url": "https://avatars.githubusercontent.com/u/62669899?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Braweria",
          "html_url": "https://github.com/Braweria",
          "followers_url": "https://api.github.com/users/Braweria/followers",
          "following_url": "https://api.github.com/users/Braweria/following{/other_user}",
          "gists_url": "https://api.github.com/users/Braweria/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Braweria/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Braweria/subscriptions",
          "organizations_url": "https://api.github.com/users/Braweria/orgs",
          "repos_url": "https://api.github.com/users/Braweria/repos",
          "events_url": "https://api.github.com/users/Braweria/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Braweria/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-08-13T11:40:48Z",
        "updated_at": "2021-08-13T11:49:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "This error happened while working locally, and also on the Codesandbox.  \r\n\r\nLocally I work with Next.js as well.  \r\nCodesandbox examples runs without Next.js.\r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. open Codesandbox\r\n2. https://codesandbox.io/s/masonry-queue-issue-o27rw?file=/src/MasonryGrid.js\r\n3. If the masonry loaded, scroll down and the error might appear.\r\n\r\nIt might have something to do with the code of the library `masonic`.\r\n\r\nHere is a gif of it happening: https://imgur.com/a/xfFwR5h It's 30 seconds long.\r\n\r\n## The current behavior\r\n\r\nThe error happens only sometimes, when it suddenly pops up and tells me the queue should exist. If I reload the page, it loads the page (but not the masonry).\r\n\r\n## The expected behavior\r\n\r\nIt should have a queue.",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21726",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21726/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21726/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21726/events",
        "html_url": "https://github.com/facebook/react/issues/21726",
        "id": 927908565,
        "node_id": "MDU6SXNzdWU5Mjc5MDg1NjU=",
        "number": 21726,
        "title": "Bug: Old bug Invariant Violation, happens ONLY in production",
        "user": {
          "login": "Bluefitdev",
          "id": 56941349,
          "node_id": "MDQ6VXNlcjU2OTQxMzQ5",
          "avatar_url": "https://avatars.githubusercontent.com/u/56941349?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Bluefitdev",
          "html_url": "https://github.com/Bluefitdev",
          "followers_url": "https://api.github.com/users/Bluefitdev/followers",
          "following_url": "https://api.github.com/users/Bluefitdev/following{/other_user}",
          "gists_url": "https://api.github.com/users/Bluefitdev/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Bluefitdev/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Bluefitdev/subscriptions",
          "organizations_url": "https://api.github.com/users/Bluefitdev/orgs",
          "repos_url": "https://api.github.com/users/Bluefitdev/repos",
          "events_url": "https://api.github.com/users/Bluefitdev/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Bluefitdev/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-06-23T06:34:05Z",
        "updated_at": "2021-07-11T16:53:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "React version: 17.0.2\r\n\r\nHello everyone,\r\n\r\nI'm sorry if this is unclear, however some bug appeared in our app couple of days ago. The bug describes as this:\r\n\r\n```\r\nUncaught Invariant Violation: Minified React error #44; visit http://facebook.github.io/react/docs/error-decoder.html?invariant=44 for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\r\n```\r\n\r\nWhich translates to this in react website:\r\n```\r\nfindDOMNode was called on an unmounted component.\r\n```\r\n\r\nWe did not upgrade anything, we just developed features as usual. However up until now I haven't been able to solve it because it doesn't happen locally at all. Thus I am not able to debug this thing.\r\n\r\nWeirdly if it only happens if i refresh the page, also only happened at 2 route, i.e: `/home` and `/login`. If i refresh the page with any other route, then it works.\r\n\r\nThe problem is it doesn't happen on localhost so I really have no idea what this is. \r\n\r\nThe project is company's based so I don't think i can share the codebase, however i will share some of the most important details that I think is causing this issue?\r\n\r\nWe are using `craco` and `lerna` in monorepo packages.\r\n\r\nhere's our craco config:\r\n```\r\nconst cracoBabelLoader = require('craco-babel-loader');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst cracoIncludeLernaPackagePlugin = require('./craco-include-lerna-package-plugin');\r\n\r\n// Handle relative paths to sibling packages\r\nconst appDirectory = fs.realpathSync(process.cwd());\r\nconst resolvePackage = relativePath => path.resolve(appDirectory, relativePath);\r\n\r\nmodule.exports = {\r\n\tplugins: [\r\n\t\t{\r\n\t\t\tplugin: cracoBabelLoader,\r\n\t\t\toptions: {\r\n\t\t\t\tincludes: [resolvePackage('../formik-material'), resolvePackage('../naked-forms')]\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\tstyle: {\r\n\t\tpostcss: {\r\n\t\t\tplugins: [require('tailwindcss'), require('autoprefixer')]\r\n\t\t}\r\n\t}\r\n};\r\n```\r\n\r\n\r\nIs anyone experiencing the same issue? Please help\r\n\r\nAlso our cloud setup is using GCP Cloud Storage, loaded from Google Load Balancer with CDN option below if that helps:\r\n\r\n![Screen Shot 2021-06-23 at 4 41 03 pm](https://user-images.githubusercontent.com/56941349/123048563-dd8e8600-d441-11eb-9988-5c67aa9cf6f2.png)\r\n\r\n\r\nThanks in advance",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21387",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21387/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21387/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21387/events",
        "html_url": "https://github.com/facebook/react/issues/21387",
        "id": 870623211,
        "node_id": "MDU6SXNzdWU4NzA2MjMyMTE=",
        "number": 21387,
        "title": "Bug: ",
        "user": {
          "login": "taoszu",
          "id": 15262319,
          "node_id": "MDQ6VXNlcjE1MjYyMzE5",
          "avatar_url": "https://avatars.githubusercontent.com/u/15262319?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/taoszu",
          "html_url": "https://github.com/taoszu",
          "followers_url": "https://api.github.com/users/taoszu/followers",
          "following_url": "https://api.github.com/users/taoszu/following{/other_user}",
          "gists_url": "https://api.github.com/users/taoszu/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/taoszu/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/taoszu/subscriptions",
          "organizations_url": "https://api.github.com/users/taoszu/orgs",
          "repos_url": "https://api.github.com/users/taoszu/repos",
          "events_url": "https://api.github.com/users/taoszu/events{/privacy}",
          "received_events_url": "https://api.github.com/users/taoszu/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-04-29T05:25:01Z",
        "updated_at": "2021-05-04T10:11:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Error: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\r\n\r\nReact version:  17.0.2\r\n\r\n## Steps To Reproduce\r\n```\r\nimport \"./styles.css\";\r\nimport React from 'react'\r\n\r\nexport default class App extends React.Component {\r\n\r\n  Parent = () => {\r\n    /**\r\n     * this will be ok\r\n     * const Child = this.Child\r\n     * return <Child />\r\n     */\r\n    return <this.Child />\r\n  }\r\n\r\n  Child = () => {\r\n    return <div>child</div>\r\n  }\r\n\r\n  render() {\r\n    return <this.Parent />\r\n  }\r\n\r\n}\r\n```\r\n\r\nLink to code example: [code example](https://codesandbox.io/s/function-components-error-qro61?file=/src/App.tsx)\r\n\r\n## The current behavior\r\ncan not render the child component \r\n\r\n## The expected behavior\r\n",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21692",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21692/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21692/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21692/events",
        "html_url": "https://github.com/facebook/react/issues/21692",
        "id": 922812957,
        "node_id": "MDU6SXNzdWU5MjI4MTI5NTc=",
        "number": 21692,
        "title": "Bug: memory leak in useReducer",
        "user": {
          "login": "onnlucky",
          "id": 45293,
          "node_id": "MDQ6VXNlcjQ1Mjkz",
          "avatar_url": "https://avatars.githubusercontent.com/u/45293?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/onnlucky",
          "html_url": "https://github.com/onnlucky",
          "followers_url": "https://api.github.com/users/onnlucky/followers",
          "following_url": "https://api.github.com/users/onnlucky/following{/other_user}",
          "gists_url": "https://api.github.com/users/onnlucky/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/onnlucky/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/onnlucky/subscriptions",
          "organizations_url": "https://api.github.com/users/onnlucky/orgs",
          "repos_url": "https://api.github.com/users/onnlucky/repos",
          "events_url": "https://api.github.com/users/onnlucky/events{/privacy}",
          "received_events_url": "https://api.github.com/users/onnlucky/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-06-16T16:11:17Z",
        "updated_at": "2021-08-07T19:44:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "React version: 17.0.2\r\n\r\nWhen using `React.useReducer()` and a new action is pushed, but the reducer returns the current state, the operation is queued in a pending queue. But if the component isn't re-rendered for other reasons, it will never start work on that pending queue. This can potentially rack up a huge list of `pending.next.next.next.next...`\r\n\r\n## Steps To Reproduce\r\n\r\n1. https://codesandbox.io/s/unruffled-moore-wp5wq?file=/src/App.js\r\n2. click increment a few times\r\n2. place a breakpoint in react-dom.development.js line 16072, click increment, that should hit the break point, then expand queue.pending.next.next.next and see they are unique actions. (https://github.com/facebook/react/blob/269dd6ec5da85fc5ca819cfa010ce60dd1c83ec6/packages/react-reconciler/src/ReactFiberHooks.new.js#L1937)\r\n\r\nLink to code example: https://codesandbox.io/s/unruffled-moore-wp5wq?file=/src/App.js\r\n\r\n## The current behavior\r\n\r\nThere is no change in behavior, but it is potentially racking up an enormous list of pending tasks, costing memory.\r\n\r\n## The expected behavior\r\n\r\nFlat memory usage. Reducer doesn't run twice on the same action.\r\n\r\nThis is very much related to https://github.com/facebook/react/pull/15198 because later the reducer might run, and basically reduce the same actions again. Which is unexpected. And if using side-effects, doesn't produce the expected results.\r\n\r\nOther related bugs: https://github.com/facebook/react/issues/17953 https://github.com/facebook/react/issues/15088",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21972",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21972/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21972/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21972/events",
        "html_url": "https://github.com/facebook/react/issues/21972",
        "id": 954160846,
        "node_id": "MDU6SXNzdWU5NTQxNjA4NDY=",
        "number": 21972,
        "title": "Bug: `onResize` media event is missing",
        "user": {
          "login": "rileyjshaw",
          "id": 1840854,
          "node_id": "MDQ6VXNlcjE4NDA4NTQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1840854?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rileyjshaw",
          "html_url": "https://github.com/rileyjshaw",
          "followers_url": "https://api.github.com/users/rileyjshaw/followers",
          "following_url": "https://api.github.com/users/rileyjshaw/following{/other_user}",
          "gists_url": "https://api.github.com/users/rileyjshaw/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rileyjshaw/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rileyjshaw/subscriptions",
          "organizations_url": "https://api.github.com/users/rileyjshaw/orgs",
          "repos_url": "https://api.github.com/users/rileyjshaw/repos",
          "events_url": "https://api.github.com/users/rileyjshaw/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rileyjshaw/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-07-27T18:34:14Z",
        "updated_at": "2021-07-27T18:34:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Note: I’m happy to make a pull request to fix this, I just wanted to log it first to ensure there’s interest.\r\n\r\n---\r\n\r\nReact’s [synthetic media events](https://reactjs.org/docs/events.html#media-events) contain several [existing media events](https://html.spec.whatwg.org/multipage/media.html#mediaevents), for instance `onLoadedMetadata` and `onVolumeChange`. But there is no `onResize` handler.\r\n\r\n[`resize` is a standard media event](https://html.spec.whatwg.org/multipage/media.html#event-media-resize) that triggers when one or both of the `videoWidth` and `videoHeight` attributes have just been updated. It’s useful for responding to resolution changes in video players.\r\n\r\nReact version: 17.0.2 (latest release as of initial issue report)\r\n\r\n## Steps To Reproduce\r\n\r\n1. Create a `<video>` element with an `onResize` prop.\r\n2. Check the console for the following warning:\r\n\r\n```\r\n Warning: Unknown event handler property `onResize`. It will be ignored.\r\n```\r\n\r\nLink to code example: https://codesandbox.io/s/musing-snowflake-zb0qh?file=/src/App.js\r\n\r\n## The current behavior\r\n\r\n`onResize` handlers are ignored on `<video>` elements.\r\n\r\n## The expected behavior\r\n\r\n`onResize` handlers are valid on `<video>` elements.",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/22054",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/22054/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/22054/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/22054/events",
        "html_url": "https://github.com/facebook/react/issues/22054",
        "id": 964763133,
        "node_id": "MDU6SXNzdWU5NjQ3NjMxMzM=",
        "number": 22054,
        "title": "Bug: \"NotFoundError\" when removeChildFromContainer -> container.removeChild(child) is called",
        "user": {
          "login": "Saranya13",
          "id": 38315832,
          "node_id": "MDQ6VXNlcjM4MzE1ODMy",
          "avatar_url": "https://avatars.githubusercontent.com/u/38315832?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Saranya13",
          "html_url": "https://github.com/Saranya13",
          "followers_url": "https://api.github.com/users/Saranya13/followers",
          "following_url": "https://api.github.com/users/Saranya13/following{/other_user}",
          "gists_url": "https://api.github.com/users/Saranya13/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Saranya13/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Saranya13/subscriptions",
          "organizations_url": "https://api.github.com/users/Saranya13/orgs",
          "repos_url": "https://api.github.com/users/Saranya13/repos",
          "events_url": "https://api.github.com/users/Saranya13/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Saranya13/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-08-10T09:11:27Z",
        "updated_at": "2021-08-10T09:11:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "React throw an unhandled exception \"NotFoundError\" when removeChildFromContainer -> container.removeChild(child) is called on a node that doesn't contains the child anymore.\r\nThis only occurs in IE 11.\r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. open the attached sample and run the application in **ie11**\r\n2. then click the **toggle grid** button\r\n3. Then you can see the script error in console like below.\r\n\r\n![image](https://user-images.githubusercontent.com/38315832/128839214-47e67800-3833-4c3d-a776-5d2975dcb0aa.png)\r\n\r\n\r\n\r\n\r\nLink to code example:\r\n\r\n[grid-notfounderror-ie11.zip](https://github.com/facebook/react/files/6960342/grid-notfounderror-ie11.zip)\r\n\r\n\r\n## The current behavior\r\n\r\n\"NotFoundError\" when removeChildFromContainer -> container.removeChild(child) is called\r\n\r\n## The expected behavior\r\n\r\nNeed to working as like chrome edge browsers",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/22049",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/22049/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/22049/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/22049/events",
        "html_url": "https://github.com/facebook/react/issues/22049",
        "id": 964189322,
        "node_id": "MDU6SXNzdWU5NjQxODkzMjI=",
        "number": 22049,
        "title": "Bug: \"Cannot read property 'length' of undefined\" in areHookInputsEqual",
        "user": {
          "login": "hamzahamidi",
          "id": 22576950,
          "node_id": "MDQ6VXNlcjIyNTc2OTUw",
          "avatar_url": "https://avatars.githubusercontent.com/u/22576950?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hamzahamidi",
          "html_url": "https://github.com/hamzahamidi",
          "followers_url": "https://api.github.com/users/hamzahamidi/followers",
          "following_url": "https://api.github.com/users/hamzahamidi/following{/other_user}",
          "gists_url": "https://api.github.com/users/hamzahamidi/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/hamzahamidi/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/hamzahamidi/subscriptions",
          "organizations_url": "https://api.github.com/users/hamzahamidi/orgs",
          "repos_url": "https://api.github.com/users/hamzahamidi/repos",
          "events_url": "https://api.github.com/users/hamzahamidi/events{/privacy}",
          "received_events_url": "https://api.github.com/users/hamzahamidi/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-08-09T16:58:47Z",
        "updated_at": "2021-08-10T13:42:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\nWhen testing my component where I'm using this usecallback hook. I'm getting the error.\r\n```\r\n  const getUrlWithPrefix = useCallback(\r\n    (href: string) => {\r\n      let url = href;\r\n      // logic\r\n      return url;\r\n    },\r\n    [prefix],\r\n  );\r\n```\r\n![image](https://user-images.githubusercontent.com/22576950/128743558-6db90fb6-bafb-4a47-9d4b-d2b8b4bad177.png)\r\n\r\nWhen I dug a little in the callstack I found that it's linked to the code here:\r\n\r\nhttps://github.com/facebook/react/blob/cae635054e17a6f107a39d328649137b83f25972/packages/react-dom/src/server/ReactPartialRendererHooks.js#L92\r\n\r\nShouldn't we just check if prevDeps is neither null nor undefined? \r\n\r\n",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21810",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21810/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21810/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21810/events",
        "html_url": "https://github.com/facebook/react/issues/21810",
        "id": 938984369,
        "node_id": "MDU6SXNzdWU5Mzg5ODQzNjk=",
        "number": 21810,
        "title": "Bug: unstable_flushDiscreteUpdates when rendering <video muted />",
        "user": {
          "login": "reaktivo",
          "id": 13637,
          "node_id": "MDQ6VXNlcjEzNjM3",
          "avatar_url": "https://avatars.githubusercontent.com/u/13637?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/reaktivo",
          "html_url": "https://github.com/reaktivo",
          "followers_url": "https://api.github.com/users/reaktivo/followers",
          "following_url": "https://api.github.com/users/reaktivo/following{/other_user}",
          "gists_url": "https://api.github.com/users/reaktivo/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/reaktivo/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/reaktivo/subscriptions",
          "organizations_url": "https://api.github.com/users/reaktivo/orgs",
          "repos_url": "https://api.github.com/users/reaktivo/repos",
          "events_url": "https://api.github.com/users/reaktivo/events{/privacy}",
          "received_events_url": "https://api.github.com/users/reaktivo/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-07-07T14:59:18Z",
        "updated_at": "2021-07-07T14:59:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "React version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Rendering `<video muted />` triggers \"Warning: unstable_flushDiscreteUpdates: Cannot flush updates when React is already rendering\"\r\n\r\n```jsx\r\nimport * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\ntest(\"should render without calling console error\", () => {\r\n  jest.spyOn(console, \"error\").mockImplementation(() => {});\r\n  const container = document.createElement(\"div\");\r\n  document.body.appendChild(container);\r\n\r\n  ReactDOM.render(<video muted />, container);\r\n  expect(console.error).not.toHaveBeenCalled();\r\n});\r\n\r\n```\r\n\r\nLink to code example:\r\n\r\nhttps://codesandbox.io/s/sad-waterfall-ks59l?file=/index.test.js:0-384\r\n\r\n## The current behavior\r\nCalls `console.error` with un-actionable error\r\n\r\n## The expected behavior\r\nDoesn't call `console.error` or calls it with a potential solution\r\n",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21515",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21515/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21515/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21515/events",
        "html_url": "https://github.com/facebook/react/pull/21515",
        "id": 893429619,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ1OTQ1MzIy",
        "number": 21515,
        "title": "Fix unwindInterruptedWork bug",
        "user": {
          "login": "penwa",
          "id": 24696574,
          "node_id": "MDQ6VXNlcjI0Njk2NTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24696574?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/penwa",
          "html_url": "https://github.com/penwa",
          "followers_url": "https://api.github.com/users/penwa/followers",
          "following_url": "https://api.github.com/users/penwa/following{/other_user}",
          "gists_url": "https://api.github.com/users/penwa/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/penwa/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/penwa/subscriptions",
          "organizations_url": "https://api.github.com/users/penwa/orgs",
          "repos_url": "https://api.github.com/users/penwa/repos",
          "events_url": "https://api.github.com/users/penwa/events{/privacy}",
          "received_events_url": "https://api.github.com/users/penwa/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-05-17T15:06:41Z",
        "updated_at": "2021-05-22T01:49:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/21515",
          "html_url": "https://github.com/facebook/react/pull/21515",
          "diff_url": "https://github.com/facebook/react/pull/21515.diff",
          "patch_url": "https://github.com/facebook/react/pull/21515.patch"
        },
        "body": "In the function unwindInterruptedWork, when the flag disableLegacyContext is true, it is possible that an error occurs in the stack.",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21059",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21059/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21059/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21059/events",
        "html_url": "https://github.com/facebook/react/issues/21059",
        "id": 838960244,
        "node_id": "MDU6SXNzdWU4Mzg5NjAyNDQ=",
        "number": 21059,
        "title": "Bug: Nondeterministic first render",
        "user": {
          "login": "bennettdams",
          "id": 29319414,
          "node_id": "MDQ6VXNlcjI5MzE5NDE0",
          "avatar_url": "https://avatars.githubusercontent.com/u/29319414?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bennettdams",
          "html_url": "https://github.com/bennettdams",
          "followers_url": "https://api.github.com/users/bennettdams/followers",
          "following_url": "https://api.github.com/users/bennettdams/following{/other_user}",
          "gists_url": "https://api.github.com/users/bennettdams/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/bennettdams/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/bennettdams/subscriptions",
          "organizations_url": "https://api.github.com/users/bennettdams/orgs",
          "repos_url": "https://api.github.com/users/bennettdams/repos",
          "events_url": "https://api.github.com/users/bennettdams/events{/privacy}",
          "received_events_url": "https://api.github.com/users/bennettdams/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2021-03-23T17:33:29Z",
        "updated_at": "2021-06-10T13:01:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "It is possible that this is not a bug, but rather expected - I couldn't find any material on the internet for this particular use case though.\r\n\r\nReact version: v17.0.1\r\n\r\n*TL;DR   React sometimes renders a loading state and sometimes not, without changes in the UI. Maybe this has something to do with [batched updates][1], where the initial state and the next state are batched?*\r\n\r\n\r\n## Steps To Reproduce\r\n\r\n[![See on CodeSandbox](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/react-nondeterministic-rendering-vh47i?file=/src/App.tsx)\r\n\r\n[![enter image description here][3]][3]\r\n\r\nHere's the setup, a chart that takes a *long* time to render. So long that the render is blocking. There are three different ways to render the chart here:\r\n\r\n 1. the \"normal\" way\r\n 2. with a \"mounted\" render hack\r\n 3. with the same \"mounted\" render hack, but with an additional `setTimeout`\r\n\r\nOption 2 & 3 both have a small `useState` to check whether they've been mounted. I do this to show a \"Loading\" state conditionally:\r\n\r\n\r\n```tsx\r\nfunction ChartWithMountHack({ data }: { data: Data }) {\r\n  // initially not mounted\r\n  const [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    // \"Now I've been mounted!\"\r\n    setIsMounted(true);\r\n  }, []);\r\n\r\n  return !isMounted ? <p>Loading</p> : <Chart data={data} />;\r\n}\r\n```\r\nI did this, because I want to show a \"Loading\" state instead of a blocking render, so e.g. page switches or ternary rendering (e.g. `hasData ? <p>No data</p> : <Chart />`) are shown immediately, instead of blocking. **(If there are better ways, please let me know!)**\r\n\r\n\r\n\r\n## The current behavior\r\n\r\nNow, each button will render one of the three options/charts. Again, the second and third chart have a small hack to check whether they're mounted or not.\r\n\r\nTry clicking on the first button and the second button back & forth quickly.\r\nYou will see that sometimes the \"Chart with mount hack\" will (\"correctly\") render the \"Loading\" state, but sometimes it just doesn't render the \"Loading\" - instead it blocks the render up until the chart is finished rendering (skips the \"Loading\" state).\r\n\r\nI think this is due to the render cycles and whether you get the two updates in one cycle of the batching. (first: `isMounted === false` -> second: `isMounted === true`)\r\n\r\nI can't really tell how to reproduce this, hence the \"nondeterministic\" in the title. Sometimes you also have to click on \"Regenerate data\" and click back & forth after that. \r\n\r\n## The expected behavior\r\n\r\n\r\nOption 3 (\"Chart with mount hack with timeout\") ALWAYS gives me the \"Loading\" state, which is exactly what I want. The only difference to option 2 is using a `setTimeout` in the `useEffect` where `isMounted` is set to true. [`setTimeout` is used here to break out of the update batching.][2]\r\n\r\nIs there a better way to opt-out of the batching, so `isMounted` will always render with its initial value (`false`)?  \r\n\r\n\r\nShouldn't the first render and its initial values be outside of the batched updates? If not, how can I tell React to do so (given that stuff like async/`setTimeout`/.. are just \"hacks\" to circumvent that right now)?\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/48563650/does-react-keep-the-order-for-state-updates/48610973#48610973\r\n  [2]: https://github.com/facebook/react/issues/14259#issuecomment-439632622\r\n  [3]: https://i.stack.imgur.com/2opgKm.png\r\n",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21993",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21993/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21993/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21993/events",
        "html_url": "https://github.com/facebook/react/issues/21993",
        "id": 956311707,
        "node_id": "MDU6SXNzdWU5NTYzMTE3MDc=",
        "number": 21993,
        "title": "Bug: \"Unsafe assignment to innerHTML\" warning from Mozilla addons linter",
        "user": {
          "login": "tdriley",
          "id": 1516335,
          "node_id": "MDQ6VXNlcjE1MTYzMzU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1516335?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/tdriley",
          "html_url": "https://github.com/tdriley",
          "followers_url": "https://api.github.com/users/tdriley/followers",
          "following_url": "https://api.github.com/users/tdriley/following{/other_user}",
          "gists_url": "https://api.github.com/users/tdriley/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/tdriley/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/tdriley/subscriptions",
          "organizations_url": "https://api.github.com/users/tdriley/orgs",
          "repos_url": "https://api.github.com/users/tdriley/repos",
          "events_url": "https://api.github.com/users/tdriley/events{/privacy}",
          "received_events_url": "https://api.github.com/users/tdriley/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-07-30T01:01:23Z",
        "updated_at": "2021-07-30T01:01:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Our Browser Extension addon seems to be stuck in review with Mozilla, and their submission service is feeding back (what appear to be ESLint warnings), saying \"Unsafe assignment to innerHTML.\"\r\n\r\nI can recreate the warnings by running the Mozilla addons-linter on our extension's dist files and removing `react-dom` prevents the warnings, but then of course there is no `ReactDOM.render` func to render the react app onto the page.\r\n\r\nIs there any alternative to `react-dom` without moving away from react completely, or a way to prevent the assignment of `.innerHTML` from being in the dist files of a react app?\r\n\r\nReact version: 16.9.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. Build a Web Extension addon using react apps for the Popup and Options UIs.\r\n2. Use the Mozilla `addons-linter` npm package to lint the dist files.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://github.com/facebook/react/blob/cae635054e17a6f107a39d328649137b83f25972/packages/react-dom/src/client/setInnerHTML.js#L63\r\n\r\n```\r\n// Any src which imports the react-dom package will result in dist files which trigger the linter warnings.\r\nimport ReactDOM from \"react-dom\"\r\n```\r\n\r\nSystem:\r\nOS: macOS 10.15.7\r\nBinaries:\r\nNode: 12.2.0 - ~/.nvm/versions/node/v12.2.0/bin/node\r\nnpm: 7.5.2 - ~/.nvm/versions/node/v12.2.0/bin/npm\r\nnpmPackages:\r\n@babel/core: ^7.5.5 => 7.5.5\r\n@babel/preset-env: ^7.5.5 => 7.5.5\r\n@babel/preset-react: ^7.0.0 => 7.0.0\r\nbabel-jest: ^24.9.0 => 24.9.0\r\nbabel-loader: ^8.0.6 => 8.0.6\r\nbabel-plugin-emotion: ^10.0.19 => 10.0.19\r\njest: ^24.9.0 => 24.9.0\r\nwebpack: ^4.39.2 => 4.39.2\r\n\r\n## The current behavior\r\nIt is not possible to build Web Extensions with react which do not trigger the \"Unsafe assignment to innerHTML\" warnings from the Mozilla addons linter.\r\n\r\n## The expected behavior\r\nIt is possible to build Web Extensions with react which do not trigger the \"Unsafe assignment to innerHTML\" warnings from the Mozilla addons linter.",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21987",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21987/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21987/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21987/events",
        "html_url": "https://github.com/facebook/react/issues/21987",
        "id": 955829352,
        "node_id": "MDU6SXNzdWU5NTU4MjkzNTI=",
        "number": 21987,
        "title": "Bug: Bundle 16.14.0 does not include expected bugfix",
        "user": {
          "login": "lenzls",
          "id": 263263,
          "node_id": "MDQ6VXNlcjI2MzI2Mw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/263263?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/lenzls",
          "html_url": "https://github.com/lenzls",
          "followers_url": "https://api.github.com/users/lenzls/followers",
          "following_url": "https://api.github.com/users/lenzls/following{/other_user}",
          "gists_url": "https://api.github.com/users/lenzls/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/lenzls/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/lenzls/subscriptions",
          "organizations_url": "https://api.github.com/users/lenzls/orgs",
          "repos_url": "https://api.github.com/users/lenzls/repos",
          "events_url": "https://api.github.com/users/lenzls/events{/privacy}",
          "received_events_url": "https://api.github.com/users/lenzls/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-07-29T13:12:26Z",
        "updated_at": "2021-07-29T13:12:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I was using React version 16.13.1, but wanted to benefit from #18676. The PR was merged in ffb6c6c07b1a6dcabd04b22a6a5afeab96d53ae2. So I upgraded to 16.14.0.\r\n\r\nSadly, the problem was still there for me. I dug a little deeper and realized that the new version does not include the expected changes from the PR.\r\n\r\n- The changes are included on the v16.4.0 tag in the repository:  [Line 1030 in `ReactDOMComponent.js`](https://github.com/facebook/react/blob/v16.14.0/packages/react-dom/src/client/ReactDOMComponent.js#L1030)\r\n- Looking at 16.14.0 at unpkg, I do not see the changes in the bundle: [Line 6448 in `react-dom.development.js`](https://unpkg.com/browse/react-dom@16.14.0/cjs/react-dom.development.js#L6448)\r\n\r\nNote that the bundle of version 17.0.0 does include the change on unpkg: [Line 9567 in `react-dom.development.js`](https://unpkg.com/browse/react-dom@17.0.0/cjs/react-dom.development.js#L9567)\r\n\r\nI don't find the error in my thinking, so I wonder if there went something wrong during the release.\r\n\r\nKind regards,\r\n\r\nSimon",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21974",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21974/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21974/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21974/events",
        "html_url": "https://github.com/facebook/react/issues/21974",
        "id": 954263947,
        "node_id": "MDU6SXNzdWU5NTQyNjM5NDc=",
        "number": 21974,
        "title": "[DevTools Bug]: StrictMode not shown in component tree",
        "user": {
          "login": "rickhanlonii",
          "id": 2440089,
          "node_id": "MDQ6VXNlcjI0NDAwODk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2440089?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rickhanlonii",
          "html_url": "https://github.com/rickhanlonii",
          "followers_url": "https://api.github.com/users/rickhanlonii/followers",
          "following_url": "https://api.github.com/users/rickhanlonii/following{/other_user}",
          "gists_url": "https://api.github.com/users/rickhanlonii/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rickhanlonii/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rickhanlonii/subscriptions",
          "organizations_url": "https://api.github.com/users/rickhanlonii/orgs",
          "repos_url": "https://api.github.com/users/rickhanlonii/repos",
          "events_url": "https://api.github.com/users/rickhanlonii/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rickhanlonii/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 710573595,
            "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
            "name": "Component: Developer Tools",
            "color": "fbca04",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-07-27T21:02:03Z",
        "updated_at": "2021-07-27T21:04:59Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "### Website or app\n\nhttps://codesandbox.io/s/objective-lehmann-u2jn4?file=/src/App.js\n\n### Repro steps\n\n- Open React devtools in codesandbox\r\n- See that there's no StrictMode in the tree any more\r\n\r\n<img width=\"1463\" alt=\"Screen Shot 2021-07-27 at 4 56 17 PM\" src=\"https://user-images.githubusercontent.com/2440089/127226919-bad27090-db61-45eb-8133-ed701e411d3b.png\">\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21942",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21942/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21942/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21942/events",
        "html_url": "https://github.com/facebook/react/issues/21942",
        "id": 950995193,
        "node_id": "MDU6SXNzdWU5NTA5OTUxOTM=",
        "number": 21942,
        "title": "Bug: Conditional rendering issue when using multiple SVGs as ReactComponents ",
        "user": {
          "login": "itsez",
          "id": 14205460,
          "node_id": "MDQ6VXNlcjE0MjA1NDYw",
          "avatar_url": "https://avatars.githubusercontent.com/u/14205460?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/itsez",
          "html_url": "https://github.com/itsez",
          "followers_url": "https://api.github.com/users/itsez/followers",
          "following_url": "https://api.github.com/users/itsez/following{/other_user}",
          "gists_url": "https://api.github.com/users/itsez/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/itsez/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/itsez/subscriptions",
          "organizations_url": "https://api.github.com/users/itsez/orgs",
          "repos_url": "https://api.github.com/users/itsez/repos",
          "events_url": "https://api.github.com/users/itsez/events{/privacy}",
          "received_events_url": "https://api.github.com/users/itsez/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-07-22T19:48:26Z",
        "updated_at": "2021-07-23T12:35:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 16.12.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. import multiple SVGs as ReactComponents into a component\r\n2. setup conditional rendering of those components via prop value\r\n3. render multiple of the component on a page with different prop values\r\n4. observe the first render of the SVG being repeated\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\nhttps://gist.github.com/itsez/9f99ae3f1fd156c9c995b494a4148d48\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nWhen rendering a component with conditional rendering, that is importing SVGs as ReactComponents, whatever the first iteration of the component selects to render is repeated for all consecutive renders of that component.\r\n\r\n## The expected behavior\r\nThe conditional rendering should update for each iteration of the component based on the property passed in and not repeat the first render for all iterations",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21932",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21932/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21932/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21932/events",
        "html_url": "https://github.com/facebook/react/issues/21932",
        "id": 949534590,
        "node_id": "MDU6SXNzdWU5NDk1MzQ1OTA=",
        "number": 21932,
        "title": "Bug: Lazy only attempts to retrieve module on first mount",
        "user": {
          "login": "andyrichardson",
          "id": 10779424,
          "node_id": "MDQ6VXNlcjEwNzc5NDI0",
          "avatar_url": "https://avatars.githubusercontent.com/u/10779424?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/andyrichardson",
          "html_url": "https://github.com/andyrichardson",
          "followers_url": "https://api.github.com/users/andyrichardson/followers",
          "following_url": "https://api.github.com/users/andyrichardson/following{/other_user}",
          "gists_url": "https://api.github.com/users/andyrichardson/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/andyrichardson/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/andyrichardson/subscriptions",
          "organizations_url": "https://api.github.com/users/andyrichardson/orgs",
          "repos_url": "https://api.github.com/users/andyrichardson/repos",
          "events_url": "https://api.github.com/users/andyrichardson/events{/privacy}",
          "received_events_url": "https://api.github.com/users/andyrichardson/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-07-21T09:56:23Z",
        "updated_at": "2021-07-21T10:02:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Currently when lazy retrieval of a module fails during the initial mount, this failed state persists for the lifetime of the lazy component (despite new instantiation).\r\n\r\n```tsx\r\n// If fails on first mount, will forever fail\r\nconst Component = lazy(() => import('./Component'));\r\n\r\nconst App = () => {\r\n  // ...\r\n  {someCondition && <Component />}\r\n  // ...\r\n}\r\n```\r\n\r\nConsider the following user experience:\r\n - user loads webpage\r\n - network connection goes offline\r\n - user loads lazy route\r\n - lazy module retrieval fails\r\n - network connection goes online\r\n - user navigates away from lazy element (unmount)\r\n - user navigates back to lazy element (mount)\r\n\r\nExpected result:\r\n - Lazy module retrieval is (once again) attempted and user is able to see mounted component\r\n \r\nActual result:\r\n - Lazy module retrieval is skipped due to failure on prior element mount - user is forced to refresh to continue using site despite now being able to retrieve module\r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Load webpage\r\n2. Click toggle button to mount lazy component\r\n3. Click toggle button to unmount lazy component\r\n4. Click toggle button to mount lazy component \r\n\r\nLink to code example: https://codesandbox.io/s/snowy-voice-xsnne?file=/src/App.js\r\n\r\n## The current behavior\r\nOn second mount, module retrieval is attempted again\r\n\r\n\r\n## The expected behavior\r\nOn second mount, failed state from previous component instantiation is used\r\n\r\n## Additional info\r\n\r\nNaive attempt at addressing this - #21924",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/20901",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/20901/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/20901/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/20901/events",
        "html_url": "https://github.com/facebook/react/issues/20901",
        "id": 817910384,
        "node_id": "MDU6SXNzdWU4MTc5MTAzODQ=",
        "number": 20901,
        "title": "Bug: Event handling with portals is broken",
        "user": {
          "login": "sag-tobias-frey",
          "id": 75436831,
          "node_id": "MDQ6VXNlcjc1NDM2ODMx",
          "avatar_url": "https://avatars.githubusercontent.com/u/75436831?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sag-tobias-frey",
          "html_url": "https://github.com/sag-tobias-frey",
          "followers_url": "https://api.github.com/users/sag-tobias-frey/followers",
          "following_url": "https://api.github.com/users/sag-tobias-frey/following{/other_user}",
          "gists_url": "https://api.github.com/users/sag-tobias-frey/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sag-tobias-frey/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sag-tobias-frey/subscriptions",
          "organizations_url": "https://api.github.com/users/sag-tobias-frey/orgs",
          "repos_url": "https://api.github.com/users/sag-tobias-frey/repos",
          "events_url": "https://api.github.com/users/sag-tobias-frey/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sag-tobias-frey/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2021-02-27T12:21:57Z",
        "updated_at": "2021-07-30T07:59:56Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Event handling with portals is broken in the newest version when placing non-react event handlers BETWEEN other react event handlers. With the following setup **outer react event handler with stopPropagation** > **non-react event handler** > **inner react event handler (in portal)**. Doing the same without portals works correctly. \r\n\r\nReact version: 17.0.1\r\n\r\n## Steps To Reproduce\r\n### With portal (not working)\r\n1. https://stackblitz.com/edit/ag-grid-react-hello-world-gwuhed?devtoolsheight=33&file=index.js\r\n2. Click on the div\r\n3. Only inner and outer event handlers are called\r\n\r\n### Without portal (working)\r\n1. https://stackblitz.com/edit/ag-grid-react-hello-world-gwuhed?devtoolsheight=33&file=index.js\r\n2. Comment out the portal code and comment in the non-portal code (line 24 / 25)\r\n3. Click on the div\r\n4. All three event handlers are triggered\r\n\r\nLink to code example: https://stackblitz.com/edit/ag-grid-react-hello-world-gwuhed?devtoolsheight=33&file=index.js\r\n\r\n## The current behavior\r\n\r\nNon-react event handlers are not called when the initial event is initiated from a portal component and an outer react event handler calls stop propagation. This works correctly without portals.\r\n\r\n## The expected behavior\r\n\r\nThe non-react event handler should also be called when a portal component initiates the event.",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/20330",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/20330/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/20330/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/20330/events",
        "html_url": "https://github.com/facebook/react/issues/20330",
        "id": 750856098,
        "node_id": "MDU6SXNzdWU3NTA4NTYwOTg=",
        "number": 20330,
        "title": "Bug: onLoadStart is not passed to img",
        "user": {
          "login": "keul",
          "id": 284924,
          "node_id": "MDQ6VXNlcjI4NDkyNA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/284924?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/keul",
          "html_url": "https://github.com/keul",
          "followers_url": "https://api.github.com/users/keul/followers",
          "following_url": "https://api.github.com/users/keul/following{/other_user}",
          "gists_url": "https://api.github.com/users/keul/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/keul/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/keul/subscriptions",
          "organizations_url": "https://api.github.com/users/keul/orgs",
          "repos_url": "https://api.github.com/users/keul/repos",
          "events_url": "https://api.github.com/users/keul/events{/privacy}",
          "received_events_url": "https://api.github.com/users/keul/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 127893911,
            "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
            "name": "Component: DOM",
            "color": "fef2c0",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-11-25T14:17:53Z",
        "updated_at": "2021-08-05T14:16:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Although it seem a valid event, and it works using vanilla HTML/JS (at least **Firefox**, Chrome still have an open bug https://bugs.chromium.org/p/chromium/issues/detail?id=458851), it seems that using and `onLoadStart` event on an `img` is not working in react.\r\n\r\nReact version: 17.0.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. With **Firefox** open browser development tools\r\n2. Disable browser's cache\r\n3. Using Firefox go to https://ukpcn.csb.app/\r\n4. Check the console\r\n\r\nLink to code example: https://codesandbox.io/s/onloadstart-issue-ukpcn\r\n\r\n## The current behavior\r\n\r\nThe console shown:\r\n\r\n```\r\nVanilla img loading\r\nVanilla img loaded\r\nReact img loaded\r\n```\r\n\r\nSeems that the `onLoadStart` is not working.\r\n\r\n## The expected behavior\r\n\r\nThe `onLoadStart` function should be executed, so logging also `React img loading`",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21888",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21888/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21888/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21888/events",
        "html_url": "https://github.com/facebook/react/issues/21888",
        "id": 945680794,
        "node_id": "MDU6SXNzdWU5NDU2ODA3OTQ=",
        "number": 21888,
        "title": "Bug: Useeffect Dependency List Dosent Recorgnise optional chaining",
        "user": {
          "login": "pappyJ",
          "id": 65920240,
          "node_id": "MDQ6VXNlcjY1OTIwMjQw",
          "avatar_url": "https://avatars.githubusercontent.com/u/65920240?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/pappyJ",
          "html_url": "https://github.com/pappyJ",
          "followers_url": "https://api.github.com/users/pappyJ/followers",
          "following_url": "https://api.github.com/users/pappyJ/following{/other_user}",
          "gists_url": "https://api.github.com/users/pappyJ/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/pappyJ/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/pappyJ/subscriptions",
          "organizations_url": "https://api.github.com/users/pappyJ/orgs",
          "repos_url": "https://api.github.com/users/pappyJ/repos",
          "events_url": "https://api.github.com/users/pappyJ/events{/privacy}",
          "received_events_url": "https://api.github.com/users/pappyJ/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-07-15T19:16:34Z",
        "updated_at": "2021-07-15T19:16:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version:\r\n\r\n## Steps To Reproduce\r\n\r\n1.Write code with side effects inside the useeffect block\r\n\r\n2. list out the side effects using optional chaining to refer nested deps. \r\n\r\n\r\n code example\r\n\r\n useEffect(() => {\r\n    getProfessionalWorkImages(myProfession?._id);\r\n  }, [getProfessionalWorkImages, myProfession?._id]);\r\n\r\n## The current behavior\r\n\r\nReact still complains about missing dependencies on console\r\n\r\n## The expected behavior\r\n\r\nno warnings\r\n",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21884",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21884/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21884/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21884/events",
        "html_url": "https://github.com/facebook/react/issues/21884",
        "id": 944965297,
        "node_id": "MDU6SXNzdWU5NDQ5NjUyOTc=",
        "number": 21884,
        "title": "Bug: useState set the same value, trigger the render",
        "user": {
          "login": "ry596384086",
          "id": 47969261,
          "node_id": "MDQ6VXNlcjQ3OTY5MjYx",
          "avatar_url": "https://avatars.githubusercontent.com/u/47969261?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ry596384086",
          "html_url": "https://github.com/ry596384086",
          "followers_url": "https://api.github.com/users/ry596384086/followers",
          "following_url": "https://api.github.com/users/ry596384086/following{/other_user}",
          "gists_url": "https://api.github.com/users/ry596384086/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/ry596384086/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/ry596384086/subscriptions",
          "organizations_url": "https://api.github.com/users/ry596384086/orgs",
          "repos_url": "https://api.github.com/users/ry596384086/repos",
          "events_url": "https://api.github.com/users/ry596384086/events{/privacy}",
          "received_events_url": "https://api.github.com/users/ry596384086/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-07-15T03:33:35Z",
        "updated_at": "2021-07-16T07:59:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--![image](https://user-images.githubusercontent.com/47969261/125724805-268adb54-dd70-4852-a370-eb9018405160.png)  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\nIn React Hooks, useState set the same value, trigger the render\r\n\r\n\r\nReact version:17.0.2\r\n\r\n## Steps To Reproduce\r\n```import React, { useState } from \"react\";\r\n\r\nconst App = () => {\r\n  const [Loading, setLoading] = useState(true);\r\n  const [count, setCount] = useState(0);\r\n\r\n  console.log('log: ', count);\r\n\r\n  const handleClick = () => {\r\n    setCount((pre) => pre + 1)\r\n  };\r\n  const handleLoad = () => {\r\n    setLoading(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>aa</div>\r\n      <div>{count}</div>\r\n\r\n      <button onClick={handleClick}>Test</button>\r\n      <button onClick={handleLoad}>Load</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n```\r\n\r\n1.click Load[setLoading(true)], do not trigger the render, not console.log\r\n2.click test[setCount(pre => pre + 1)], trigger the render, console.log('log: ', 1);\r\n3.click Load[setLoading(true)], trigger the render, console.log('log: ', 1);\r\n\r\nwhy did this trigger the render when I clicked Load secondly ?\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:https://codesandbox.io/s/nifty-bohr-lqxex?file=/src/App.js\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## debug\r\n\r\nI found that the problem lies in the <b>function dispatchAction(fiber, queue, action)</b> function\r\n\r\n```\r\nfunction dispatchAction(fiber, queue, action) {\r\n  {\r\n    if (typeof arguments[3] === 'function') {\r\n      error(\"State updates from the useState() and useReducer() Hooks don't support the \" + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().');\r\n    }\r\n  }\r\n\r\n  var eventTime = requestEventTime();\r\n  var lane = requestUpdateLane(fiber);\r\n  var update = {\r\n    lane: lane,\r\n    action: action,\r\n    eagerReducer: null,\r\n    eagerState: null,\r\n    next: null\r\n  }; // Append the update to the end of the list.\r\n\r\n  var pending = queue.pending;\r\n\r\n  if (pending === null) {\r\n    // This is the first update. Create a circular list.\r\n    update.next = update;\r\n  } else {\r\n    update.next = pending.next;\r\n    pending.next = update;\r\n  }\r\n\r\n  queue.pending = update;\r\n  var alternate = fiber.alternate;\r\n\r\n  if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {\r\n    // This is a render phase update. Stash it in a lazily-created map of\r\n    // queue -> linked list of updates. After this render pass, we'll restart\r\n    // and apply the stashed updates on top of the work-in-progress hook.\r\n    didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\r\n  } else {\r\n    if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {\r\n      // The queue is currently empty, which means we can eagerly compute the\r\n      // next state before entering the render phase. If the new state is the\r\n      // same as the current state, we may be able to bail out entirely.\r\n      var lastRenderedReducer = queue.lastRenderedReducer;\r\n\r\n      if (lastRenderedReducer !== null) {\r\n        var prevDispatcher;\r\n\r\n        {\r\n          prevDispatcher = ReactCurrentDispatcher$1.current;\r\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n        }\r\n\r\n        try {\r\n          var currentState = queue.lastRenderedState;\r\n          var eagerState = lastRenderedReducer(currentState, action); \r\n          // Stash the eagerly computed state, and the reducer used to compute\r\n          // it, on the update object. If the reducer hasn't changed by the\r\n          // time we enter the render phase, then the eager state can be used\r\n          // without calling the reducer again.\r\n\r\n          update.eagerReducer = lastRenderedReducer;\r\n          update.eagerState = eagerState;\r\n\r\n          if (objectIs(eagerState, currentState)) {\r\n          // Fast path. We can bail out without scheduling React to re-render.\r\n          // It's still possible that we'll need to rebase this update later,\r\n          // if the component re-renders for a different reason and by that\r\n          // time the reducer has changed.\r\n            return;\r\n          }\r\n        } catch (error) {\r\n        // Suppress the error. It will throw again in the render phase.\r\n        } finally {\r\n          {\r\n            ReactCurrentDispatcher$1.current = prevDispatcher;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    {\r\n      // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\r\n      if ('undefined' !== typeof jest) {\r\n        warnIfNotScopedWithMatchingAct(fiber);\r\n        warnIfNotCurrentlyActingUpdatesInDev(fiber);\r\n      }\r\n    }\r\n\r\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\r\n  }\r\n}\r\n```\r\n\r\n1. The first step, click the Load button, the code goes to (if (objectIs(eagerState, currentState))), and it is found that the temporary state (not yet rendered to the page) is the same as the current state (the current rendering of the page) (true-> true), return directly, do not enter the update schedule scheduleUpdateOnFiber(fiber, lane, eventTime);\r\n2. In the second step, click the test button, the state before and after is different (count from 0->1), the code enters scheduleUpdateOnFiber(fiber, lane, eventTime); the page is rendered again.\r\n3. In the third step, click the Load button. Since the condition if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) is not met at this time, it will not proceed. If (objectIs(eagerState, currentState)) is judged, it is directly executed to scheduleUpdateOnFiber(fiber, lane, eventTime); update scheduling, resulting in the function being re-executed and the page being re-rendered even if the loading before and after the same is the same.\r\n\r\n![image](https://user-images.githubusercontent.com/47969261/125724805-268adb54-dd70-4852-a370-eb9018405160.png)\r\nAt this moment, fiber.lanes changed from 0 to 1 (it was always 0 before), which is why trigger render.\r\n<b>I don't understand why fiber.lanes changed from 0 to 1 in this case.</b>",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21078",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21078/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21078/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21078/events",
        "html_url": "https://github.com/facebook/react/issues/21078",
        "id": 840056221,
        "node_id": "MDU6SXNzdWU4NDAwNTYyMjE=",
        "number": 21078,
        "title": "Bug: Incorrect error message",
        "user": {
          "login": "toschlog",
          "id": 25090868,
          "node_id": "MDQ6VXNlcjI1MDkwODY4",
          "avatar_url": "https://avatars.githubusercontent.com/u/25090868?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/toschlog",
          "html_url": "https://github.com/toschlog",
          "followers_url": "https://api.github.com/users/toschlog/followers",
          "following_url": "https://api.github.com/users/toschlog/following{/other_user}",
          "gists_url": "https://api.github.com/users/toschlog/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/toschlog/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/toschlog/subscriptions",
          "organizations_url": "https://api.github.com/users/toschlog/orgs",
          "repos_url": "https://api.github.com/users/toschlog/repos",
          "events_url": "https://api.github.com/users/toschlog/events{/privacy}",
          "received_events_url": "https://api.github.com/users/toschlog/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2021-03-24T18:55:19Z",
        "updated_at": "2021-04-01T08:57:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm getting this error message:\r\n\r\n  React Hook \"useStyles\" is called conditionally. React Hooks must be called in the exact same order in every component render\r\n\r\nHowever, I'm pretty darn sure that I'm not actually calling useStyles conditionally.  Also, the error messages come and go if I comment out unrelated code.\r\n\r\nReact version: 17.0.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Attempt to run my app\r\n\r\nUnfortunately this error only happens with one particular big source file.  I don't see an easy way to show it to you without sending my whole project.  I don't mind doing that, however.\r\n",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21812",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21812/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21812/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21812/events",
        "html_url": "https://github.com/facebook/react/issues/21812",
        "id": 939062805,
        "node_id": "MDU6SXNzdWU5MzkwNjI4MDU=",
        "number": 21812,
        "title": "Bug: onContextMenu not fired in iOS 13 and later",
        "user": {
          "login": "robatwilliams",
          "id": 3041926,
          "node_id": "MDQ6VXNlcjMwNDE5MjY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3041926?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/robatwilliams",
          "html_url": "https://github.com/robatwilliams",
          "followers_url": "https://api.github.com/users/robatwilliams/followers",
          "following_url": "https://api.github.com/users/robatwilliams/following{/other_user}",
          "gists_url": "https://api.github.com/users/robatwilliams/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/robatwilliams/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/robatwilliams/subscriptions",
          "organizations_url": "https://api.github.com/users/robatwilliams/orgs",
          "repos_url": "https://api.github.com/users/robatwilliams/repos",
          "events_url": "https://api.github.com/users/robatwilliams/events{/privacy}",
          "received_events_url": "https://api.github.com/users/robatwilliams/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-07-07T16:27:09Z",
        "updated_at": "2021-07-14T10:31:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\nFrom v13 onwards, iOS doesn't fire `contextmenu` events on long-press. It only displays the \"touch callout\".\r\n\r\nThis inconsistency with all other browser seems, like something [synthetic events](https://reactjs.org/docs/events.html) could handle:\r\n\r\n> Your event handlers will be passed instances of SyntheticEvent, a cross-browser wrapper around the browser’s native event. It has the same interface as the browser’s native event, including stopPropagation() and preventDefault(), **except the events work identically across all browsers**.\r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Long-press an element with an `onContextMenu` listener\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://www.quirksmode.org/dom/events/tests/contextmenu.html\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nReact `onContextMenu` listeners are not called.\r\n\r\n## The expected behavior\r\nReact `onContextMenu` listeners are called.\r\n\r\n## Workarounds\r\n* Use a timer to detect long-press, or a [library](https://www.npmjs.com/package/use-long-press) that does that\r\n* Use an alternative user interaction - which is perhaps what Apple would rather you do, but degrades the experience for non-native apps\r\n\r\n## References\r\n* #17596\r\n* https://github.com/Leaflet/Leaflet/issues/6817\r\n* https://github.com/mdn/browser-compat-data/issues/6376\r\n* https://github.com/w3c/touch-events/issues/68\r\n* https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-touch-callout (still doesn't fire even when callout disabled)",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21706",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21706/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21706/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21706/events",
        "html_url": "https://github.com/facebook/react/issues/21706",
        "id": 925454137,
        "node_id": "MDU6SXNzdWU5MjU0NTQxMzc=",
        "number": 21706,
        "title": "Bug: Memory leak with setState lambda setting to previous state",
        "user": {
          "login": "Haemoglobin",
          "id": 204224,
          "node_id": "MDQ6VXNlcjIwNDIyNA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/204224?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Haemoglobin",
          "html_url": "https://github.com/Haemoglobin",
          "followers_url": "https://api.github.com/users/Haemoglobin/followers",
          "following_url": "https://api.github.com/users/Haemoglobin/following{/other_user}",
          "gists_url": "https://api.github.com/users/Haemoglobin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Haemoglobin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Haemoglobin/subscriptions",
          "organizations_url": "https://api.github.com/users/Haemoglobin/orgs",
          "repos_url": "https://api.github.com/users/Haemoglobin/repos",
          "events_url": "https://api.github.com/users/Haemoglobin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Haemoglobin/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-06-19T19:31:47Z",
        "updated_at": "2021-07-29T10:40:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, \r\n\r\nIt seems that there is a memory leak issue when using the set state hook lambda syntax, and setting the state to the previous state. The set state lambda in this scenario seems to be retained and never garbage collected. \r\n\r\nPlease ignore the contrived example, it's intentionally whittled down to the exact issue. It's quite a common requirement in our application to subscribe to an rxjs observable in a useEffect hook, then update some state when events are received (but the data received might not always result in a state change). The lambda syntax is required in the set state call because current state would otherwise always be the default state due to the closure around it in the useEffect hook. Even if there was another way to do it to avoid the issue, it's still a surprising behaviour and makes it harder to fall into the 'pit of success'.\r\n\r\nReproduction below: \r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <title>Memory leak repro</title>\r\n    <script src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n\r\n    <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\r\n  </head>\r\n  <body>\r\n    <div id=\"root\"></div>\r\n    <script type=\"text/babel\">\r\n        function App() {\r\n          const [someState, setSomeState] = React.useState(false);\r\n          React.useEffect(() => {\r\n             const interval = setInterval(() => {\r\n               const a = []; \r\n               for (var i = 0; i < 1000; i++) {\r\n                 a.push({}); //produce lots of garbage objects to make the leak easier to see\r\n               }\r\n               // memory leak when setting state to previous state\r\n               // set state lambda is not garbage collected and retained along with all of its captured closures\r\n               setSomeState(state => a.length > 0 ? state : !state);\r\n\r\n               // no memory leak when setting state to something other than previous state\r\n               // set state lambda (and it's closures) are garbage collected as expected\r\n               // setSomeState(state => a.length == 0 ? state : !state);\r\n              }, 100);\r\n             return () => clearInterval(interval);\r\n          }, []);\r\n          return <div>Test Memory Leak</div>;\r\n      }\r\n\r\n\r\n      ReactDOM.render(\r\n        <App/>,\r\n        document.getElementById('root')\r\n      );\r\n\r\n    </script>\r\n  </body>\r\n</html>\r\n\r\n```\r\n\r\nThe best memory profiler to see this is the 'Allocation instrumentation on timeline' mode in chrome devtools. \r\n\r\nI have confirmed this also happens using production / minified bundles so it's not a dev build issue. \r\n\r\nRight now as a workaround I need to use 'hacks' like useRef and forceUpdate implementations which is a real shame so keen to see this fixed. \r\n\r\nPossibly related to #21692\r\nMany thanks!",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21002",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21002/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21002/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21002/events",
        "html_url": "https://github.com/facebook/react/issues/21002",
        "id": 831167999,
        "node_id": "MDU6SXNzdWU4MzExNjc5OTk=",
        "number": 21002,
        "title": "Bug: Unsupported HTML entities",
        "user": {
          "login": "fast-reflexes",
          "id": 2438128,
          "node_id": "MDQ6VXNlcjI0MzgxMjg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2438128?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fast-reflexes",
          "html_url": "https://github.com/fast-reflexes",
          "followers_url": "https://api.github.com/users/fast-reflexes/followers",
          "following_url": "https://api.github.com/users/fast-reflexes/following{/other_user}",
          "gists_url": "https://api.github.com/users/fast-reflexes/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/fast-reflexes/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/fast-reflexes/subscriptions",
          "organizations_url": "https://api.github.com/users/fast-reflexes/orgs",
          "repos_url": "https://api.github.com/users/fast-reflexes/repos",
          "events_url": "https://api.github.com/users/fast-reflexes/events{/privacy}",
          "received_events_url": "https://api.github.com/users/fast-reflexes/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-03-14T14:16:25Z",
        "updated_at": "2021-03-17T07:29:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Many of the HTML entities presented at https://dev.w3.org/html5/html-author/charref are not supported by React, why is this?\r\n\r\n## Steps To Reproduce\r\n\r\nCheck https://codesandbox.io/s/react-unsupported-html-entities-yr9rj\r\n\r\n## The current behavior\r\n\r\nReact recognizes some entities as string literals which may cause problems when the browser in question in fact supports the entity but React tricks the browser into thinking that it is a string, just because React doesn't seem to recognize it.\r\n\r\n## The expected behavior\r\n\r\nThe symbol that the entity should yield.\r\n",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21802",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21802/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21802/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21802/events",
        "html_url": "https://github.com/facebook/react/issues/21802",
        "id": 937377813,
        "node_id": "MDU6SXNzdWU5MzczNzc4MTM=",
        "number": 21802,
        "title": "[React 18] Possible Suspense Bug - Thrown error causes corrupted page",
        "user": {
          "login": "flybayer",
          "id": 8813276,
          "node_id": "MDQ6VXNlcjg4MTMyNzY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8813276?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flybayer",
          "html_url": "https://github.com/flybayer",
          "followers_url": "https://api.github.com/users/flybayer/followers",
          "following_url": "https://api.github.com/users/flybayer/following{/other_user}",
          "gists_url": "https://api.github.com/users/flybayer/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flybayer/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flybayer/subscriptions",
          "organizations_url": "https://api.github.com/users/flybayer/orgs",
          "repos_url": "https://api.github.com/users/flybayer/repos",
          "events_url": "https://api.github.com/users/flybayer/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flybayer/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 710722093,
            "node_id": "MDU6TGFiZWw3MTA3MjIwOTM=",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Needs%20Investigation",
            "name": "Type: Needs Investigation",
            "color": "fbca04",
            "default": false,
            "description": null
          },
          {
            "id": 3079053919,
            "node_id": "MDU6TGFiZWwzMDc5MDUzOTE5",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2018",
            "name": "React 18",
            "color": "26B0E4",
            "default": false,
            "description": "Bug reports, questions, and general feedback about React 18"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-07-05T21:41:27Z",
        "updated_at": "2021-07-07T23:54:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I've found what I think to be a React bug, although it could be something we are doing wrong inside Blitz.js\r\n\r\n`React 18.0.0-alpha-ed6c091fe-20210701`\r\n\r\n## Basic Explanation\r\n\r\nThe position of a top level, unneeded `<Suspense>` component next to an `<ErrorBoundary>` causes odd UI rendering or totally corrupted page.\r\n\r\nFollowing are different variations of [this code](https://github.com/flybayer/blitz-react18/blob/main/app/pages/_app.tsx#L15-L22) inside `_app.tsx` (which is the same top level root as Next.js)\r\n\r\nThis code in `_app.tsx` causes a totally corrupted page (shows content on page that's no longer managed by React):\r\n```tsx\r\n    <Suspense fallback=\"Loading...\">\r\n      <ErrorBoundary FallbackComponent={RootErrorFallback}>\r\n        <Component {...pageProps} />\r\n      </ErrorBoundary>\r\n    </Suspense>\r\n```\r\n\r\nThis code in `_app.tsx` results in a correct end-result but has janky page transition.\r\n\r\n```tsx\r\n    <ErrorBoundary FallbackComponent={RootErrorFallback}>\r\n      <Suspense fallback=\"Loading...\">\r\n        <Component {...pageProps} />\r\n      </Suspense>\r\n    </ErrorBoundary>\r\n```\r\n\r\nThis code in `_app.tsx` without `<Suspense>` works flawless.\r\n\r\n```tsx\r\n    <ErrorBoundary FallbackComponent={RootErrorFallback}>\r\n      <Component {...pageProps} />\r\n    </ErrorBoundary>\r\n```\r\n\r\nI feel like this is a React bug because, to my knowledge, position of a `<Suspense>` component should have zero affect on a thrown error or ErrorBoundary.\r\n\r\n## Further Explanation\r\n\r\nIn Blitz.js, we have a feature for restricting access to certain pages based on the user login status. We implement this [by throwing a custom `RedirectError`](https://github.com/blitz-js/blitz/blob/canary/packages/core/src/auth/auth-client.ts#L68-L74). And then inside our `<ErrorBoundary>` component, [we call `router.push()`](https://github.com/blitz-js/blitz/blob/canary/packages/core/src/error-boundary.tsx#L94-L98) when RedirectError is caught. And while the ErrorBoundary is in that temporary in-between state, we [render null](https://github.com/blitz-js/blitz/blob/canary/packages/core/src/error-boundary.tsx#L154-L156). The issue described above occurs when a page transition is initiated via RedirectError.\r\n\r\nPlease let me know if there's something wrong with this approach or if there's a better way to implement the pattern. 🙏 \r\n\r\n## To Reproduce\r\n\r\n1. Open this codesandbox: https://codesandbox.io/s/sharp-antonelli-u982e\r\n1. Wait for the deps to install and home page to load (takes a bit)\r\n1. See both the contents of `/protected` and `/` on the same page:\r\n   - React dev tools shows that the `/protected` contents are no longer in the React tree\r\n![image](https://user-images.githubusercontent.com/8813276/124835823-f3c33880-df4f-11eb-9371-e8d0aee570b9.png)",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21497",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21497/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21497/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21497/events",
        "html_url": "https://github.com/facebook/react/issues/21497",
        "id": 890160278,
        "node_id": "MDU6SXNzdWU4OTAxNjAyNzg=",
        "number": 21497,
        "title": "Bug: ReactDOM ignores invalid styles (e.g. unquoted font-family)",
        "user": {
          "login": "niwinz",
          "id": 843689,
          "node_id": "MDQ6VXNlcjg0MzY4OQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/843689?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/niwinz",
          "html_url": "https://github.com/niwinz",
          "followers_url": "https://api.github.com/users/niwinz/followers",
          "following_url": "https://api.github.com/users/niwinz/following{/other_user}",
          "gists_url": "https://api.github.com/users/niwinz/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/niwinz/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/niwinz/subscriptions",
          "organizations_url": "https://api.github.com/users/niwinz/orgs",
          "repos_url": "https://api.github.com/users/niwinz/repos",
          "events_url": "https://api.github.com/users/niwinz/events{/privacy}",
          "received_events_url": "https://api.github.com/users/niwinz/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 127893911,
            "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
            "name": "Component: DOM",
            "color": "fef2c0",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 24,
        "created_at": "2021-05-12T14:38:53Z",
        "updated_at": "2021-08-12T20:10:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Just try to set `fontFamily: \"Exo 2\"` on styles.\r\n\r\nhttps://codesandbox.io/s/react-exo-2-font-b80ij\r\n\r\n- If you chage it to \"Exo\", the hot reload correctly sets \"Exo\" fontFamily on the dom.\r\n- If you next change again to \"Exo 2\", it just leaves the dom with the previous value: \"Exo\"\r\n\r\nThis happens on latest Firefox, Chrome and Brave\r\n",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/20770",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/20770/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/20770/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/20770/events",
        "html_url": "https://github.com/facebook/react/issues/20770",
        "id": 804794838,
        "node_id": "MDU6SXNzdWU4MDQ3OTQ4Mzg=",
        "number": 20770,
        "title": "Bug: Disabled button state update prevents `scrollIntoView`",
        "user": {
          "login": "jjenzz",
          "id": 175330,
          "node_id": "MDQ6VXNlcjE3NTMzMA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/175330?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jjenzz",
          "html_url": "https://github.com/jjenzz",
          "followers_url": "https://api.github.com/users/jjenzz/followers",
          "following_url": "https://api.github.com/users/jjenzz/following{/other_user}",
          "gists_url": "https://api.github.com/users/jjenzz/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/jjenzz/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/jjenzz/subscriptions",
          "organizations_url": "https://api.github.com/users/jjenzz/orgs",
          "repos_url": "https://api.github.com/users/jjenzz/repos",
          "events_url": "https://api.github.com/users/jjenzz/events{/privacy}",
          "received_events_url": "https://api.github.com/users/jjenzz/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 127893911,
            "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
            "name": "Component: DOM",
            "color": "fef2c0",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2021-02-09T18:16:29Z",
        "updated_at": "2021-06-30T05:30:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have a `button` that triggers `scrollIntoView` for a node when clicked. It also updates some state which subsequently disables that button in certain cases. If the button becomes disabled, the `scrollIntoView` execution is exited.\r\n\r\nThis seems to only happen in Chrome/Brave.\r\n\r\nReact version: 17.0.1\r\n\r\n## Steps To Reproduce\r\n\r\nSee steps to reproduce in sandbox.\r\n\r\nhttps://codesandbox.io/s/goofy-curie-yts68?file=/src/App.js\r\n\r\n## The current behavior\r\n\r\nDescribed above.\r\n\r\n## The expected behavior\r\n\r\nThe state update should not prevent `scrollIntoView`.\r\n",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/20741",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/20741/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/20741/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/20741/events",
        "html_url": "https://github.com/facebook/react/issues/20741",
        "id": 801826293,
        "node_id": "MDU6SXNzdWU4MDE4MjYyOTM=",
        "number": 20741,
        "title": "Bug: Nested form elements not firing onSubmit",
        "user": {
          "login": "zediah",
          "id": 2045469,
          "node_id": "MDQ6VXNlcjIwNDU0Njk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2045469?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/zediah",
          "html_url": "https://github.com/zediah",
          "followers_url": "https://api.github.com/users/zediah/followers",
          "following_url": "https://api.github.com/users/zediah/following{/other_user}",
          "gists_url": "https://api.github.com/users/zediah/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/zediah/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/zediah/subscriptions",
          "organizations_url": "https://api.github.com/users/zediah/orgs",
          "repos_url": "https://api.github.com/users/zediah/repos",
          "events_url": "https://api.github.com/users/zediah/events{/privacy}",
          "received_events_url": "https://api.github.com/users/zediah/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 127893911,
            "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
            "name": "Component: DOM",
            "color": "fef2c0",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2021-02-05T04:12:14Z",
        "updated_at": "2021-06-29T17:19:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "React version: 17.0.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Create a nested form element with an onsubmit handler\r\n2. The onSubmit handler will not be called\r\n\r\nIn the example, click the \"Submit child\" button and will see the page reload/no console.logs. However, the expected actions occur for both parent and neighbouring forms.\r\n\r\nLink to code example:\r\nhttps://codesandbox.io/s/zen-hoover-6wit3?file=/src/App.js\r\n\r\n\r\n## The current behavior\r\nThe attached onSubmit handler on a nested form element is not being called/fired.\r\n\r\n## The expected behavior\r\nExpect the onsubmit handler to be called.\r\n\r\nI'm aware that nesting forms is not valid - but it was working react 16. I'm hoping to not get \"you're doing it wrong\" responses - but if there is no intention to support this situation the future I would really appreciate an explanation for it :) I've got a bunch of legacy code here that I'd rather not have to go through and refactor and/or not upgrade to react 17.",
        "performed_via_github_app": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/21490",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/21490/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/21490/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/21490/events",
        "html_url": "https://github.com/facebook/react/issues/21490",
        "id": 886962796,
        "node_id": "MDU6SXNzdWU4ODY5NjI3OTY=",
        "number": 21490,
        "title": "Bug: Memory leak in simple dialog interaction",
        "user": {
          "login": "bawa",
          "id": 1261145,
          "node_id": "MDQ6VXNlcjEyNjExNDU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1261145?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bawa",
          "html_url": "https://github.com/bawa",
          "followers_url": "https://api.github.com/users/bawa/followers",
          "following_url": "https://api.github.com/users/bawa/following{/other_user}",
          "gists_url": "https://api.github.com/users/bawa/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/bawa/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/bawa/subscriptions",
          "organizations_url": "https://api.github.com/users/bawa/orgs",
          "repos_url": "https://api.github.com/users/bawa/repos",
          "events_url": "https://api.github.com/users/bawa/events{/privacy}",
          "received_events_url": "https://api.github.com/users/bawa/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2021-05-11T11:27:44Z",
        "updated_at": "2021-05-18T06:18:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\n\r\nI recently encountered a memory leak in our app. Trying to isolate the problem I ended up with a simple create-react app, where\r\nit also seems to appear. The app consists of a simple button opening a dialog. Dialog has a text field (for simplification not connected to anything, state changes etc) and a list of strings rendered as divs. Dialog can be opened any number of times and then closed. This works correctly - no memory problems. However, if I try to enter any string into the text field and then close the dialog - memory seems to leak, number of fibernodes (and e.g detached input elements) is rising and never gets gc.\r\nThis behavior can be observed on dev mode (npm start), prod mode (npm run build, serve -s), but for some reason CANNOT be observed on codesandbox, in embedded view (https://codesandbox.io/s/determined-joliot-hox9x), but can be reproduced there in new window mode. \r\n\r\nthanks for any help\r\nBartek\r\n\r\nApp.tsx :\r\n```\r\nfunction App() {\r\n\r\n  const [open, setOpen] = useState(false)\r\n  const [data, setData] = useState<string[]>([])\r\n\r\n  useEffect(() => {\r\n    const initData = () => {\r\n      setData(Array.from(new Array(100),(val,index)=> \"some string \" + index ))\r\n    };\r\n    initData();\r\n    return () => {\r\n      //cleanups on unmount\r\n\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  function handleClickOpen()  {\r\n    setOpen(true);\r\n  }\r\n\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <DataBrowser open={open} data={data} onClose={handleClose}/>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open simple dialog\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n```\r\n\r\nDialog triggered by above button:\r\n\r\n```\r\nimport * as React from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\ntype Props = {\r\n    open: boolean\r\n    data: string[]\r\n    onClose: ()=>void\r\n}\r\n\r\nexport const DataBrowser:  React.FC<Props> = ({data, open, onClose}) => {\r\n\r\n    const handleClose = ()=> {\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            data-testid=\"databrowser_dialog\"\r\n            disableBackdropClick={true}\r\n            disableEscapeKeyDown={false}>\r\n                <DialogTitle  id=\"form-dialog-title\">\r\n                    {\"Data browser\"}\r\n                    <IconButton  aria-label=\"Close\" color=\"primary\" onClick={handleClose}>\r\n                        <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent >\r\n\r\n\r\n                    <React.Fragment>\r\n\r\n                        <input type={\"text\"}/>\r\n\r\n                        {data.map((item, idx)=>{\r\n                            return <div key={idx}>{item}</div>\r\n                        })}\r\n\r\n                    </React.Fragment>\r\n\r\n                </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n```\r\n\r\nVersions: \r\n\r\n\"@material-ui/core\": \"4.11.4\",\r\n\"@material-ui/icons\": \"4.11.2\",\r\n\"react\": \"^17.0.2\",\r\n\"react-dom\": \"^17.0.2\",\r\n\"react-scripts\": \"4.0.3\",\r\n\"typescript\": \"^4.2.4\",\r\n\r\nOccurs on dev and prod modes, strict mode not used\r\n\r\n## Steps To Reproduce\r\n\r\n1. Click on button to open dialog\r\n2. Enter anything into text field\r\n3. Close dialog\r\n\r\n## The current behavior\r\n\r\nMemory consumption is rising and never gets garbage collected\r\n\r\n## The expected behavior\r\n\r\nMemory consumption is not rising upon over some warmup limit\r\n",
        "performed_via_github_app": null,
        "score": 1
      }
    ]
  }


  let handleChange = (e) => {
    setSearchtext(e.target.value)

  }



  useEffect(() => {
    let getData = async () => {
      try {
        //let res = await axios.get(`https://api.github.com/search/issues?q=repo:facebook/react+${searchText}+in:title`)
        //console.log(res.data
        setDataAPI(fakeData.items)
        console.log(fakeData.items)

      } catch (error) {
        console.error(error)
      }
    }
    getData()
  }, [searchText])

  let getContrastYIQ = (hexcolor) =>{
    var r = parseInt(hexcolor.substr(0,2),16);
    var g = parseInt(hexcolor.substr(2,2),16);
    var b = parseInt(hexcolor.substr(4,2),16);
    var yiq = ((r*299)+(g*587)+(b*114))/1000;
    return (yiq >= 128) ? '#000' : '#fff';
  }

  return (
    <div className='SearchBugs'>
        <h1>Search bugs on Github API</h1>
        <div className="SearchBugs__container">
          <input type="text" value={searchText} onChange={(e) => handleChange(e)} className='SearchBugs__container__input' />
          <div className="SearchBugs__container__options">
            {
              dataAPI.length > 0 && dataAPI.map( (item,key) => {
                return <div key={key} className='item'>
                          <h4>{item.title}</h4>
                          <div className="labels">
                            {
                              item.labels.map( (label,key) =>{ return <span style={
                                  {
                                    backgroundColor: `#${label.color}`,
                                    color:`${getContrastYIQ(label.color)}`
                                  }
                                }
                                >
                                {label.name}
                              </span> } )
                            }                            
                          </div>
                          <div className="extra">
                            #{item.number} by {item.user.login}
                          </div>
                        </div>
              } )
            }
          </div>

        </div>
    </div>
  );
}

export default SearchBugs;
